# ansible-playbook -i $HOST, playbooks/setup-shell.yml -u $USER
- name: Install docker and docker compose
  hosts: all
  become: true
  vars:
    docker_plugin_path: /usr/local/lib/docker/cli-plugins
  tasks:
    - name: Install required system packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: latest
        update_cache: yes

    - name: Add docker GPG key
      apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present

    - name: Verify docker GPG key
      apt_key:
        id: 0EBFCD88
        state: present

    - name: Add docker repository into sources list
      apt_repository:
        repo: "deb [arch={{ ansible_architecture | replace('aarch64', 'arm64') | replace('x86_64', 'amd64') }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
        update_cache: yes

    - name: Create docker group
      group:
        name: docker
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_ssh_user }}"
        groups: docker
        append: yes

    - name: Get latest docker compose release tag
      uri:
        url: https://api.github.com/repos/docker/compose/releases/latest
        return_content: true
      register: github_api_response

    - name: Create docker plugin directory
      file:
        path: "{{ docker_plugin_path }}"
        state: directory

    - name: Install docker compose
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ github_api_response.json.tag_name }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}
        dest: "{{ docker_plugin_path }}/docker-compose"
        mode: "ugo+x"
